// generated by Fast Light User Interface Designer (fluid) version 1.0302

#ifndef Fuzon_Mp3_h
#define Fuzon_Mp3_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
extern Fl_Double_Window *MainWindow;
#include <FL/Fl_Box.H>
#include <FL/Fl_Light_Button.H>
extern void CB_Button_Eq(Fl_Light_Button*, void*);
extern Fl_Light_Button *Button_Eq;
extern void CB_Button_Playlist(Fl_Light_Button*, void*);
extern Fl_Light_Button *Button_Playlist;
extern void CB_Button_Calc(Fl_Light_Button*, void*);
extern Fl_Light_Button *Button_Calc;
extern void CB_Button_Options(Fl_Light_Button*, void*);
extern Fl_Light_Button *Button_Options;
extern void CB_Play(Fl_Light_Button*, void*);
extern Fl_Light_Button *Play;
extern void CB_Shuffle(Fl_Light_Button*, void*);
extern Fl_Light_Button *Shuffle;
extern void CB_Button_OE2_Vis(Fl_Light_Button*, void*);
extern Fl_Light_Button *Button_OE2_Vis;
#include <FL/Fl_Button.H>
extern void CB_Play_Next(Fl_Button*, void*);
extern Fl_Button *Play_Next;
extern void CB_Play_Previous(Fl_Button*, void*);
extern Fl_Button *Play_Previous;
#include <FL/Fl_Slider.H>
extern void CB_Seekbar(Fl_Slider*, void*);
extern Fl_Slider *Seekbar;
#include <FL/Fl_Output.H>
extern Fl_Output *CurrentlyPlaying;
#include <FL/Fl_Dial.H>
extern void CB_Volume(Fl_Dial*, void*);
extern Fl_Dial *Volume;
#include <FL/Fl_Group.H>
extern Fl_Box *Box_Spectrum;
extern Fl_Slider *Slider_FFT_0;
extern Fl_Slider *Slider_FFT_1;
extern Fl_Slider *Slider_FFT_2;
extern Fl_Slider *Slider_FFT_3;
extern Fl_Slider *Slider_FFT_4;
extern Fl_Slider *Slider_FFT_5;
extern Fl_Slider *Slider_FFT_6;
extern Fl_Slider *Slider_FFT_7;
extern Fl_Slider *Slider_FFT_8;
extern Fl_Slider *Slider_FFT_9;
extern Fl_Slider *Slider_FFT_10;
extern Fl_Slider *Slider_FFT_11;
extern Fl_Slider *Slider_FFT_12;
extern Fl_Slider *Slider_FFT_13;
extern Fl_Slider *Slider_FFT_14;
extern Fl_Slider *Slider_FFT_15;
extern Fl_Slider *Slider_FFT_16;
extern Fl_Slider *Slider_FFT_17;
extern Fl_Slider *Slider_FFT_18;
extern Fl_Slider *Slider_FFT_19;
extern Fl_Slider *Slider_FFT_20;
extern Fl_Slider *Slider_FFT_21;
extern Fl_Slider *Slider_FFT_22;
extern Fl_Slider *Slider_FFT_23;
extern Fl_Slider *Slider_FFT_24;
extern Fl_Slider *Slider_FFT_25;
extern Fl_Slider *Slider_FFT_26;
extern Fl_Slider *Slider_FFT_27;
extern Fl_Slider *Slider_FFT_28;
extern Fl_Slider *Slider_FFT_29;
extern Fl_Slider *Slider_FFT_30;
extern Fl_Slider *Slider_FFT_31;
extern Fl_Slider *Slider_OutputLevel_L;
extern Fl_Slider *Slider_OutputLevel_R;
#include <FL/Fl_Value_Input.H>
extern void CB_Calc_Bpm(Fl_Value_Input*, void*);
extern Fl_Value_Input *Calc_Bpm;
extern Fl_Output *Calc_0;
extern Fl_Output *Calc_1;
extern Fl_Output *Calc_2;
extern Fl_Output *Calc_3;
extern Fl_Output *Calc_4;
extern Fl_Output *Calc_5;
extern Fl_Output *Calc_6;
extern void CB_Eq(Fl_Slider*, void*);
extern Fl_Slider *Eq_0;
extern Fl_Slider *Eq_1;
extern Fl_Slider *Eq_2;
extern Fl_Slider *Eq_3;
extern Fl_Slider *Eq_4;
extern Fl_Slider *Eq_5;
extern Fl_Slider *Eq_6;
extern Fl_Slider *Eq_7;
extern Fl_Slider *Eq_8;
extern void CB_Eq_On(Fl_Light_Button*, void*);
extern Fl_Light_Button *Eq_On;
extern void CB_Eq_Reset(Fl_Button*, void*);
extern Fl_Button *Eq_Reset;
extern void CB_Vst_On(Fl_Light_Button*, void*);
extern Fl_Light_Button *Vst_On;
#include <FL/Fl_Choice.H>
extern void CB_Vst_Choice(Fl_Choice*, void*);
extern Fl_Choice *Vst_Choice;
extern void CB_Vst_Reset(Fl_Button*, void*);
extern Fl_Button *Vst_Reset;
extern void CB_Vst_Show(Fl_Button*, void*);
extern Fl_Button *Vst_Show;
#include <FL/Fl_Browser.H>
extern void CB_PlayList(Fl_Browser*, void*);
extern Fl_Browser *Playlist_Browser;
#include <FL/Fl_Value_Output.H>
extern Fl_Value_Output *Playlist_Entries_Total;
extern void CB_Button_PlaylistManager(Fl_Button*, void*);
extern Fl_Button *Button_PlaylistManager;
#include <FL/Fl_Input.H>
extern void CB_Playlist_Search(Fl_Input*, void*);
extern Fl_Input *Playlist_Search;
extern void CB_Options_Browser_Menu(Fl_Browser*, void*);
extern Fl_Browser *Options_Browser_Menu;
extern Fl_Box *Options_Seperator;
#include <FL/Fl_Value_Slider.H>
extern void CB_Options_Slider_Updaterate(Fl_Value_Slider*, void*);
extern Fl_Value_Slider *Options_Slider_Updaterate;
extern void CB_Options_Slider_SpectrumFalloffSpeed(Fl_Value_Slider*, void*);
extern Fl_Value_Slider *Options_Slider_SpectrumFalloffSpeed;
extern void CB_Options_Slider_SpectrumColour(Fl_Value_Slider*, void*);
extern Fl_Value_Slider *Options_Slider_SpectrumColourR;
extern Fl_Value_Slider *Options_Slider_SpectrumColourG;
extern Fl_Value_Slider *Options_Slider_SpectrumColourB;
extern void CB_Options_Button_SpectrumEnable(Fl_Light_Button*, void*);
extern Fl_Light_Button *Options_Button_SpectrumEnable;
extern void CB_Options_HardwareChange(Fl_Choice*, void*);
extern Fl_Choice *Options_Choice_OutputDevice;
extern Fl_Choice *Options_Choice_OutputFreq;
extern Fl_Browser *Options_Debug;
Fl_Double_Window* Create_WindowPlayer();
extern Fl_Double_Window *Window2;
#include <FL/Fl_File_Browser.H>
extern void CB_Filebrowser(Fl_File_Browser*, void*);
extern Fl_File_Browser *Filebrowser;
extern Fl_Output *Filebrowser_Label;
extern void CB_Filebrowser_Drive(Fl_Button*, void*);
extern Fl_Button *Filebrowser_Drive;
extern Fl_Browser *Playlist_Directories;
extern void CB_Button_Playlist_Directory_Add(Fl_Button*, void*);
extern Fl_Button *Button_Playlist_Directory_Add;
extern void CB_Button_Playlist_Directory_Remove(Fl_Button*, void*);
extern Fl_Button *Button_Playlist_Directory_Remove;
Fl_Double_Window* Create_Window2();
extern Fl_Double_Window *Window3;
Fl_Double_Window* Create_Window3();
#endif
